{"version":3,"file":"static/js/899.c68299e4.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Content/Users/Users.module.css?df65","webpack://my-app/./src/components/Content/Users/Paginator.module.css?92ed","components/Content/Users/Paginator.jsx","components/Content/Users/Users.jsx","components/Content/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Users_item__rH6dq\",\"ava\":\"Users_ava__ri3zT\",\"info\":\"Users_info__vnIw1\"};","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Paginator_pagination__3ud-7\",\"selectedPage\":\"Paginator_selectedPage__INmEA\"};","import c from './Paginator.module.css'\r\n\r\nconst Paginator = (props) => {\r\n  let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n  let pageSlice = props.pageSlice\r\n  let curPage = props.currentPage\r\n  let curPageFirst = (curPage <= pageSlice) ? 0 : curPage - pageSlice\r\n  let curPageLast = curPage + pageSlice - 1\r\n  let pages = []\r\n  for (let i = 1; i < pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n  let slidedPage = pages.slice(curPageFirst, curPageLast)\r\n  return <div>\r\n    {curPage > pageSlice && <span>prev</span>}\r\n    <ul className={c.pagination}>\r\n      {slidedPage.map(p => {\r\n        return <li className={props.currentPage === p ? c.selectedPage : c.page}\r\n          onClick={() => { props.pageChanged(p) }}>{p}</li>\r\n      })}\r\n    </ul>\r\n    {curPage < pagesCount - pageSlice && <span>next</span>}\r\n  </div>\r\n}\r\n\r\nexport default Paginator","import c from './Users.module.css'\r\nimport ava from './../../../assets/images/ava.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Paginator from './Paginator'\r\nconst Users = ({currentPage, totalCount,pageSize,pageChanged, ...props}) => {\r\n  return <div>\r\n    <Paginator totalCount={totalCount} currentPage={currentPage} pageSize={pageSize} pageChanged={pageChanged} pageSlice={50}/>\r\n    {props.users.map(u => {\r\n      return <div key={u.id} className={c.item}>\r\n        <div className={c.col}>\r\n          <div className={c.ava}>\r\n            <NavLink to={\"/profile/\" + u.id}>\r\n              <img src={u.photos.small != null ? u.photos.small : ava} alt='ava' />\r\n            </NavLink>\r\n\r\n          </div>\r\n          {/* <button onClick={()=>{props.follow(u.id)}} className={c.btn}>{u.followed ? 'Follow': 'Unfollow'}</button> */}\r\n          {u.followed ?\r\n            <button className={c.btn} disabled={props.followingInProgress.includes(u.id)} onClick={() => {\r\n              props.toggleFollowingInProgress(true,u.id)\r\n              props.unfollowUser(u.id)\r\n            }}>Unfollow</button>\r\n            : <button className={c.btn} disabled={props.followingInProgress.includes(u.id)} onClick={() => {\r\n              props.toggleFollowingInProgress(true,u.id)\r\n              props.followUser(u.id)\r\n            }}>Follow</button>\r\n          }\r\n        </div>\r\n        <div className={c.info}>\r\n          <div className={c.name}>{u.name}</div>\r\n          <div className={c.location}>\r\n            <span className={c.country}>{'u.location.country'}</span>\r\n            <span className={c.city}>{'u.location.city'}</span>\r\n          </div>\r\n          <div className={c.status}>{u.status}</div>\r\n        </div>\r\n      </div>\r\n    })}\r\n  </div>\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, setCurrentPage, toggleFollowingInProgress,getUsers, followUser, unfollowUser} from \"../../../redux/users-reducer\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport Users from \"./Users\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n  }\r\n  pageChanged = (currentPage) => {\r\n    this.props.setCurrentPage(currentPage);\r\n    this.props.getUsers(currentPage, this.props.pageSize)\r\n  }\r\n  followUser = (userId) => {\r\n    this.props.followUser(userId)\r\n  }\r\n  unfollowUser = (userId) => {\r\n    this.props.unfollowUser(userId)\r\n  }\r\n  render() {\r\n    return <>{this.props.isFetching ? <Preloader /> : <Users\r\n      users={this.props.users}\r\n      totalCount={this.props.totalCount}\r\n      pageSize={this.props.pageSize}\r\n      currentPage={this.props.currentPage}\r\n      follow={this.props.follow}\r\n      toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n      followingInProgress={this.props.followingInProgress}\r\n      pageChanged={this.pageChanged} \r\n      followUser = {this.followUser}\r\n      unfollowUser = {this.unfollowUser}\r\n      />}   \r\n    </>\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    totalCount: state.usersPage.totalCount,\r\n    pageSize: state.usersPage.pageSize,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress\r\n  }\r\n}\r\n/* let mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    follow: (userId) => {\r\n      dispatch(followAC(userId))\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users))\r\n    },\r\n    setTotalCount: (totalCount) => {\r\n      dispatch(setTotalCountAC(totalCount))\r\n    },\r\n    setCurrentPage: (currentPage) => {\r\n      dispatch(setCurrentPageAC(currentPage))\r\n    }\r\n  }\r\n} */\r\nexport default connect(mapStateToProps, {\r\n  follow, setCurrentPage,toggleFollowingInProgress,getUsers,followUser,unfollowUser\r\n})(UsersContainer)"],"names":["props","pagesCount","Math","ceil","totalCount","pageSize","pageSlice","curPage","currentPage","curPageFirst","curPageLast","pages","i","push","slidedPage","slice","className","c","map","p","onClick","pageChanged","users","u","to","id","src","photos","small","ava","alt","followed","disabled","followingInProgress","includes","toggleFollowingInProgress","unfollowUser","followUser","name","status","UsersContainer","setCurrentPage","getUsers","userId","this","isFetching","Preloader","follow","React","connect","state","usersPage"],"sourceRoot":""}