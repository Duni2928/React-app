{"version":3,"file":"static/js/99.db70dbc4.chunk.js","mappings":"iJACA,OAAgB,QAAU,0B,mBCM1B,EAJmB,SAACA,GAClB,OAAO,SAAC,KAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,UAAW,SAAAC,GAAQ,OAAIC,EAAAA,OAAW,KAAOD,EAAWC,EAAAA,OAAW,KAApG,SAA2GL,EAAMM,QCE1H,EAJgB,SAACN,GACf,OAAO,gBAAKG,UAAWE,EAAAA,QAAhB,SAA4BL,EAAMO,W,oBCkBrCC,EAAa,SAACR,GAIlB,OACE,SAAC,KAAD,CACES,SALW,SAACC,GACdV,EAAMW,SAAS,CAACC,KAAM,uBAAwBC,KAAMH,EAAEI,cAKpDC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACN,kBAAMP,SAAUO,EAAcb,UAAWE,EAAAA,MAAzC,WACE,SAAC,KAAD,CAAOO,KAAK,OAAOK,UAAU,WAAWX,KAAK,gBAC7C,mBAAQM,KAAK,SAAb,2EAMV,EA/BgB,SAACZ,GACf,IAAIkB,EAAiBlB,EAAMmB,QAAQC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAYf,KAAMe,EAAKf,KAAMJ,GAAImB,EAAKnB,QACjFoB,EAAkBtB,EAAMuB,SAASH,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAASd,QAASc,EAAKd,aACxE,OACE,iBAAKJ,UAAWE,EAAAA,QAAhB,WACE,gBAAKF,UAAWE,EAAAA,YAAhB,SACGa,KAEH,iBAAKf,UAAWE,EAAAA,SAAhB,WACE,yBAAMiB,KACN,SAACd,EAAD,CAAYG,SAAUX,EAAMW,kB,mBCUpC,GAAea,E,QAAAA,IACbC,EAAAA,EADF,EANyB,WACvB,IAAIN,GAAUO,EAAAA,EAAAA,KAAa,SAACC,GAAD,OAAUA,EAAMC,WAAWT,WAClDI,GAAWG,EAAAA,EAAAA,KAAa,SAACC,GAAD,OAAWA,EAAMC,WAAWL,YACpDZ,GAAWkB,EAAAA,EAAAA,MACf,OAAO,SAAC,EAAD,CAASV,QAASA,EAASI,SAAUA,EAAUZ,SAAUA","sources":["webpack://my-app/./src/components/Content/Dialogs/Dialogs.module.css?5cdb","components/Content/Dialogs/DialogItem/DialogItem.jsx","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oiUKb\"};","import c from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n  return <NavLink to={'/dialogs/' + props.id} className={isActive => c.dialog + ' ' + (isActive ? c.active : '') }>{props.name}</NavLink>\r\n}\r\n\r\nexport default DialogItem","import c from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={c.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message","import c from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElement = props.dialogs.map(item => <DialogItem name={item.name} id={item.id} />)\r\n  let messagesElement = props.messages.map(item => <Message message={item.message} />)\r\n  return (\r\n    <div className={c.dialogs}>\r\n      <div className={c.dialogItems}>\r\n        {dialogsElement}\r\n      </div>\r\n      <div className={c.messages}>\r\n        <div>{messagesElement}</div>\r\n        <DialogForm dispatch={props.dispatch}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst DialogForm = (props) => {\r\n  let onSubmit = (e) => {\r\n    props.dispatch({type: 'dialogs/SEND_MESSAGE', text: e.dialogText})\r\n  }\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className={c.input}>\r\n          <Field type=\"text\" component=\"textarea\" name=\"dialogText\" />\r\n          <button type='submit'>Отправить</button>\r\n        </form>\r\n      )}\r\n    />\r\n  )\r\n}\r\nexport default Dialogs","//import {connect} from 'react-redux'\r\nimport Dialogs from './Dialogs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport WidthAuthRedirect from '../../hoc/AuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\n/* let mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages, \r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeValue: (message) => {\r\n      dispatch(updateMessageText(message))\r\n    }\r\n  }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs) */\r\nconst DialogsContainer = () => {\r\n  let dialogs = useSelector ((state)=> state.dialogPage.dialogs)\r\n  let messages = useSelector ((state) => state.dialogPage.messages  )\r\n  let dispatch = useDispatch()\r\n  return <Dialogs dialogs={dialogs} messages={messages} dispatch={dispatch}/>\r\n}\r\nexport default compose(\r\n  WidthAuthRedirect\r\n)(DialogsContainer)"],"names":["props","to","id","className","isActive","c","name","message","DialogForm","onSubmit","e","dispatch","type","text","dialogText","render","handleSubmit","component","dialogsElement","dialogs","map","item","messagesElement","messages","compose","WidthAuthRedirect","useSelector","state","dialogPage","useDispatch"],"sourceRoot":""}